Alter session set current_schema=bphrpt;
SELECT
  /*+parallel (4)*/
  pt.PAYMENTTRANSACTIONKEY ,
  TO_DATE(NVL(NVL(NVL(pt.SETTLEMENTDAYIDX,pt.INCOMINGSETTLEMENTDAYIDX),ptd.IntrBkSttlmDay),'1900-01-01'), 'yyyy-mm-dd') AS SETTLEMENTDAYIDX ,
  COALESCE(pt.STATUS, o.STATUS)                                                                                         AS STATUS ,
  COALESCE(pt.BANKKEY,0) BANKKEY ,
  COALESCE(pt.OUTBOUNDIPX,'<empty>') OUTBOUNDIPX ,
  COALESCE(pii.BUSINESSPARTICIPANTKEY,0) BUSINESSPARTICIPANTKEY ,
  COALESCE(pt.OUTGINSTRBUSINESSPRTCPNTKEY,0) OUTGINSTRBUSINESSPRTCPNTKEY ,
  COALESCE(ptd.rTransactionlevel,'<empty>') rTransactionlevel ,
  COALESCE(ptd.rTransactionPostSettlementFlag,'<empty>') rTransactionPostSettlementFlag ,
  COALESCE(pii.INSTRUCTIONTYPEIDX,pio.INSTRUCTIONTYPEIDX) INSTRUCTIONTYPEIDX ,
  COALESCE(pt.CLASSIFICATIONIDX,'<empty>') CLASSIFICATIONIDX ,
  COALESCE(pt.RTRANSACTIONQUALIFICATIONIDX,'<empty>') RTRANSACTIONQUALIFICATIONIDX ,
  COALESCE(ag1.AGENT_ID,0) DEBITPARTYAGENTIDKEY ,
  COALESCE(ag2.AGENT_ID,0) CREDITPARTYAGENTIDKEY ,
  COALESCE(ptd.INTERNALREASON,'<empty>') INTERNALREASON ,
  COALESCE(SUBSTR(pt.DEBITPARTYAGENTIDIDX,5,2),'<empty>') DEBITPARTYAGENTCOUNTRY ,
  COALESCE(SUBSTR(pt.CREDITPARTYAGENTIDIDX,5,2),'<empty>') CREDITPARTYAGENTCOUNTRY ,
  COALESCE(ptd.STATUSREASONCODE,'<empty>') STATUSREASONCODE ,
  COALESCE(ptd.STATUSREASONPROPRIETARYCODE,'<empty>') STATUSREASONPROPRIETARYCODE ,
  COALESCE(ptd.STATUSORIGINATORID,'<empty>') STATUSORIGINATORID ,
  COALESCE(ptd.STATUSORIGINATORNAME,'<empty>') STATUSORIGINATORNAME ,
  COALESCE(ptd.STATUSORIGINATORIDTYPE,'<empty>') STATUSORIGINATORIDTYPE ,
  pt.SETTLEMENTAMOUNTIDX --SETTLEMENTAMOUNT
  ,
  1 TRANSACTION_COUNT ,
  CASE
    WHEN pt.STATUS    IS NULL
    AND o.WHENMODIFIED > fo.TRANSPORTTIME
    THEN o.WHENMODIFIED
    WHEN pt.WHENMODIFIED > fo.TRANSPORTTIME
    THEN pt.WHENMODIFIED
    ELSE fo.TRANSPORTTIME
  END WHENMODIFIED ,
  pt.INCOMINGINSTRUCTIONKEY -- R1.2
  ,
  pt.PROCESSINGSCHEMEIDX -- R1.2
 -- ,
 -- TO_CHAR(to_date('DSJobStartTimestamp','yyyy-mm-dd hh24:mi:ss'),'yyyymmddhh24miss') LOAD_ID
FROM SCT_BPHADMIN.PAYMENTTRANSACTION pt
JOIN SCT_BPHADMIN.OPIC o
ON pt.OPICKEY = o.OPICKEY
JOIN SCT_BPHADMIN.PAYMENTINSTRUCTION pii
ON pii.PAYMENTINSTRUCTIONKEY = pt.INCOMINGINSTRUCTIONKEY
JOIN SCT_BPHADMIN.PAYMENTINSTRUCTION pio
ON pio.PAYMENTINSTRUCTIONKEY = o.OUTGOINGINSTRUCTIONKEY
JOIN SCT_BPHADMIN.PAYMENTINTERCHANGE fo
ON fo.PAYMENTINTERCHANGEKEY = pio.INTERCHANGEKEY
JOIN D_AGENT ag1
ON ag1.BICCODE     =SUBSTR(pt.DEBITPARTYAGENTIDIDX,1,8)
AND ag1.BRANCHCODE =COALESCE(SUBSTR(pt.DEBITPARTYAGENTIDIDX,9,3),'XXX')
AND ag1.CURRENT_IND=1
JOIN D_AGENT ag2
ON ag2.BICCODE     =SUBSTR(pt.CREDITPARTYAGENTIDIDX,1,8)
AND ag2.BRANCHCODE =COALESCE(SUBSTR(pt.CREDITPARTYAGENTIDIDX,9,3),'XXX')
AND ag2.CURRENT_IND=1,
  (SELECT COALESCE(MAX(Last_Fetched_Date),add_months(sysdate,-1)) LAST_FETCHED_DATE
  FROM ETL_LOADCONTROL etl
  WHERE etl.DSJobName='#DSJobName#'
  ) etl,
  xmltable('DETAILS/Trn' passing sys_xmlgen(pt.DETAILS) columns IntrBkSttlmDay path '/Trn/rTrn/SttlmInf/IntrBkSttlmDay' ,rTransactionLevel path '/Trn/rTrn/rTrnLvl' ,rTransactionPostSettlementFlag path '/Trn/rTrn/PostSettlmFlg' ,internalReason path '/Trn/rTrn/IntlRsn' ,statusReasonCode path '/Trn/rTrn/StsRsnInf[1]/StsRsn/Cd' ,statusReasonProprietaryCode path '/Trn/rTrn/StsRsnInf[1]/StsRsn/Prtry' ,statusOriginatorId path '/Trn/rTrn/StsRsnInf/StsOrgtr/Id/Id' ,statusOriginatorName path '/Trn/rTrn/StsRsnInf[1]/StsOrgtr/Nm' ,statusOriginatorIdType path '/Trn/rTrn/StsRsnInf/StsOrgtr/Id/Tp' ) ptd
WHERE NVL(NVL(NVL(pt.SETTLEMENTDAYIDX,pt.INCOMINGSETTLEMENTDAYIDX),ptd.IntrBkSttlmDay),'1900-01-01') < TO_CHAR(sysdate,'yyyy-mm-dd')
AND COALESCE(pii.INSTRUCTIONTYPEIDX,pio.INSTRUCTIONTYPEIDX)                                         IN ( 'pacs.004.001.02', 'pacs.008.001.02', 'camt.056.001.01', 'camt.029.001.03', 'pacs.002.001.03', 'pacs.002.001.03S2' )
AND ( (
  -- capture latest changes to OPIC after file transfer
  pt.STATUS      IS NULL
AND o.WHENMODIFIED>fo.TRANSPORTTIME
AND o.WHENMODIFIED>(etl.Last_Fetched_Date - (1/24/60/60)) )
OR (
  -- capture latest changes to PaymentTransactions after file transfer
  pt.WHENMODIFIED  >fo.TRANSPORTTIME
AND pt.WHENMODIFIED>(etl.Last_Fetched_Date - (1/24/60/60)) )
OR (
  -- capture sent files
  fo.transporttime>(etl.Last_Fetched_Date - (1/24/60/60)) ) ) ;
